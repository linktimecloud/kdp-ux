export default {
  clusterLifetime: '集群寿命',
  clusterLifetimeDesc: '当前时间 - 集群创建时间',
  nodeNum: '节点数',
  nodeNumDesc: '集群中主控节点数 + 工作节点数',
  nodeRunningPodNum: '节点运行Pod数量Top20',
  nodeRunningPodNumDesc: 'Pod数量：当前集群节点上运行的Pod对象总数量',
  podStatusStatis: 'Pod阶段统计',
  podStatusStatisDesc: 'Pod一生只被调度一次（分派到某个节点）从Pending开始，进入Running，取决于Pod中是否有容器失败结束进入 Succeeded/Failed',
  namespaceNum: '命名空间数',
  namespaceNumDesc: '同一集群中的资源相互隔离的组数量',
  pvcNum: 'PVC数',
  pvcNumDesc: '持久卷申领次数（PVC:PersistentVolumeClaim）',
  containerStatusStatis: '容器状态统计',
  containerStatusStatisDesc: '容器各状态的数量统计，参考：https://kubernetes.io/zh/docs/concepts/workloads/pods/pod-lifecycle/#container-states',
  waiting: '等待',
  running: '运行中',
  terminated: '已终止',
  abnormalTermination: '异常终止',
  cycleRestart: '循环重启',
  workloadAndCpuStatis: 'CPU总量及整体使用率',
  workloadAndCpuStatisDesc: 'CPU总量：集群内所有节点CPU总量，已使用量：集群内所有节点CPU使用量，使用率：使用量÷总量 %',
  labelCPU: 'CPU核数',
  usage: '使用量',
  usageRate: '使用率',
  CPUUsageRate: 'CPU@:dashboard.usageRate',
  memUsageRate: '内存@:dashboard.usageRate',
  diskUsageRate: '磁盘@:dashboard.usageRate',
  used: '已使用',
  memoryUsageStatis: '内存总量及整体使用率',
  memoryUsageStatisDesc: '内存总量：集群内所有节点内存总量，已使用量：集群内所有节点内存使用量，使用率：使用量÷总量 %',
  labelMemory: '内存大小',
  diskUsageStatis: '磁盘总量及整体使用率',
  diskUsageStatisDesc: '磁盘总量：集群内所有节点磁盘总量，已使用量：集群内所有节点磁盘使用量，使用率：使用量÷总量 %',
  labelDisk: '磁盘大小',
  requestsCPURate: 'CPU请求率',
  requestsCPURateDesc: '集群内运行容器的CPU请求量之和 ÷ 工作节点CPU可分配量之和 %',
  requestsMemoryRate: '内存请求率',
  requestsMemoryRateDesc: '集群内运行容器的内存请求量之和 ÷ 工作节点内存可分配量之和 %',
  limitsCPURate: 'CPU限制率',
  limitsCPURateDesc: '集群内运行容器的CPU限制量之和 ÷ 工作节点CPU可分配量之和 %',
  limitsMemoryRate: '内存限制率',
  limitsMemoryRateDesc: '集群内运行容器的内存限制量之和 ÷ 工作节点内存可分配量之和 %',
  podUnit: '个',
  reviewNodeDetails: '点击查看节点详情',
  group: '安全组',
  containerName: '容器名称',
  containerNum: '容器数',
  image: '镜像版本',
  expectInstance: '期望实例',
  runningInstance: '运行实例',
  waitingInstance: '等待实例',
  terminatedInstance: '终结实例',
  restartNum: '重启次数',
  maxRunningTime: '最长运行',
  usability: '可用性',
  waitingReason: '等待原因',
  terminatedReason: '终结原因',
  all: '全部',
  usabilityDuration: '可用性周期',
  podNum: 'Pod数',
  workloadNum: '负载数',
  cpuUsed: 'CPU使用(核)',
  cpuRequest: 'CPU请求',
  cpuLimit: 'CPU限制',
  memUsed: '内存使用',
  memRequest: '内存请求',
  memLimit: '内存限制',
  requestsStorage: '磁盘请求',
  cpuUsedRate: 'CPU使用率',
  cpuRequestRate: 'CPU请求率',
  cpuLimitRate: 'CPU限制率',
  memUsedRate: '内存使用率',
  memRequestRate: '内存请求率',
  memLimitRate: '内存限制率',
  sortBy: '排序方式',
  sortRadioTips: '选择带有进度条展示列的排序规则，可选择按数值排序，或者按百分比排序',
  sortByNum: '按数值',
  sortByPercent: '按百分比',
  node: '节点',
  condition: '状态',
  podLimit: 'Pod上限',
  pod: 'Pod',
  cpuTotal: 'CPU总量',
  memTotal: '内存总量',
  totalCPUAvailable: '可分配CPU总量',
  workloadUseCPU: '负载CPU使用(核)',
  totalMemoryAvailable: '可分配内存总量',
  workloadUseMemory: '负载内存使用',
  nodeCPUUsageTrend: 'CPU使用率 (%)',
  nodeMemoryUsageTrend: '内存使用率 (%)',
  nodeNetworkUsageTrend: '网络流量',
  variableNode: '{node}',
  variableContainer: '{container}',
  nodeInput: '流入:{node}',
  nodeOutput: '流出:{node}',
  podName: 'Pod名称',
  useCPULabel: '使用核数',
  disk: '磁盘',
  reset: '重启',
  podUseCPURate: '容器CPU使用率 (%)',
  podUsMemoryRate: '容器内存使用率 (%)',
  nodeDiskIO: '磁盘 I/O',
  nodeDiskIODesc: '节点中所有磁盘分区在单位时间内读写量',
  deviceRead: '{device} read',
  deviceWritten: '{device} written',
  deviceIOTime: '{device} io time',
  variablePod: '{pod}',
  variableWorkload: '{workload} - {workload_type}',
  networkInflow: '网络流入',
  networkOutflow: '网络流出',
  // Log
  logVolumeOverview: '日志量概览 - 标准输出/标准错误',
  logVolumeDesc: '各个应用打印到控制台的日志',
  logsCount: '日志量',
  occupiedCapacity: '占据容量',
  logOutflowTrend: '日志流 - 标准输出趋势图',
  capacity: '容量',
  number: '条数',
  logfileTrend: '日志流 - 日志文件趋势图',
  logfileTrendDesc: '各个应用存入日志文件的日志',
  errorFrequency: '报错频次',
  errorNumber: '报错次数',
  errorFrequencyDesc: '统计当前段时间中的各时间点一分钟内的报错次数',
  errorsReportedFromLogFile: '报错次数 (来自LOG文件)',
  errorLog: '错误日志',
  errorLogDesc: '错误日志内容列出（通过日志label中namespace、container及日志产生时间作为筛选条件，进入「日志查看器」页面筛选可查找错误日志上下文）',
  errorLogFromLogFile: '错误日志 (来自LOG文件)',
  standardOutputError: '标准输出/标准错误',
  logFile: '日志文件',
  logType: '日志类型',
  logContenKeywords: '关键字',
  Failed: '失败',
  Pending: '等待',
  Running: '运行中',
  Succeeded: '成功',
  Unknown: '未知',
  diskRead: '磁盘读取',
  diskWrite: '磁盘写入',
  partitionUsage: '分区使用率',
  resourceUsage: '资源用量',
  stderr: '标准错误',
  stdout: '标准输出',
  cpuRequestLimit: 'CPU @:common.requestLimit',
  memRequestLimit: '内存 @:common.requestLimit',
  cpuUseRequestLimit: 'CPU @:common.useRequestLimit',
  memUseRequestLimit: '内存 @:common.useRequestLimit',
  namespace: '命名空间',

  // bdc
  bdcLifetime: '大数据集群寿命',
  bdcLifetimeDesc: '当前时间 - 大数据集群创建时间',
  quotaUsage: '配额使用率',
  bdcQuotaUsageDesc: '配额使用率 = 当前大数据集群中运行容器声明的配额量 ÷ 大数据集群设置的配额量 %  。若无数据，请检查当前大数据集群配额是否正确设置',
  cpuUsedFromRequestsRate: 'CPU请求率',
  cpuUsedFromLimitRate: 'CPU限制率',
  memUsedFromRequestsRate: '内存请求率',
  memUsedFromLimitRate: '内存限制率',
  cpuUsedFromRequestsRateDesc: '当前大数据集群内, 运行容器的CPU使用总量之和 ÷ 运行容器声明的CPU「资源请求」之和  %',
  cpuUsedFromLimitRateDesc: '当前大数据集群内, 运行容器的CPU使用总量之和 ÷ 运行容器声明的CPU「资源限制」之和  %',
  memUsedFromRequestsRateDesc: '当前大数据集群内, 运行容器的内存使用总量之和 ÷ 运行容器声明的内存「资源请求」之和  %',
  memUsedFromLimitRateDesc: '当前大数据集群内, 运行容器的内存使用总量之和 ÷ 运行容器声明的内存「资源限制」之和  %'
}
