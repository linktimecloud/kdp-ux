export default {
  engineType: 'Engine',
  addDatanode: 'Add new datanode',
  hadoopNodesFeedback: 'Please select {number} nodes',
  nodesConfig: 'Nodes configuration',
  showCommitDiff: 'Show message of git-diff operation',
  general: 'General',
  app: 'application',
  name: 'Application Name',
  version: 'Application version',
  currentVersion: 'Current Version',
  latestVersion: 'Latest Version',
  icon: 'Application icon',
  clickToCopy: 'Click copy {type} address',
  clickToDetail: 'Click for node details',
  dependences: 'Dependencies',
  hasDependences: 'Please start dependent applications first',
  groupApp: 'Group Application',
  groupAppTip: 'Click the leaf nodes to check detail',
  detail: 'Application Detail',
  appDetail: 'Configuration Detail',
  debugDetail: 'Debugging Detail',
  description: 'Description',
  instance: 'Application Instance ',
  settings: 'Application Settings',
  params: 'Application Parameters',
  links: 'Applications\' Links',
  status: 'Applications\' Status',
  unhealthy: 'Unhealthy',
  installed: 'Installed',
  notInstalled: 'Not Installed',
  running: 'Running',
  runningworkflow: 'Not Running',
  runningWorkflow: 'Not Running',
  workflowSuspending: 'Application start suspension',
  deploying: 'Deploying',
  suspend: 'Suspended',
  unknown: 'Unknown',
  versions: 'Applications\' History',
  alerting: 'Alert',
  monitoring: 'Monitoring',
  logviewer: 'Logs',
  documents: 'Documents',
  addExisted: 'Application has been installed',
  addExistedDesc: 'application {name} has been installed and there is no change of setup, you needn\'t reinstall it',
  addParams: 'Please add parameter of application {name}',
  add: 'Install Application',
  addProcessing: 'The application is installing, please wait a moment',
  addConfirm: 'Install application {name} ?',
  addSuccess: 'Installed application {name}',
  startExisted: 'Application has been started',
  startExistedDesc: 'Application {name} has been started and there is no change of setup, you needn\'t restart it',
  startParams: 'Please add parameter of application {name}',
  confirmNamespce: 'Please select a security group to install the application {name}',
  start: 'Start application',
  startProcessing: 'the application is starting, please wait a moment',
  startConfirm: 'Start application {name} ?',
  startConfirmDiff: 'Sure to confirm the system change and start application {name} ?',
  startSuccess: 'Started application {name}',
  updateExisted: 'no need to update it',
  updateExistedDesc: 'there is no change of application {name} \'s setup, you needn\'t update it',
  updateParams: '@:applications.addParams',
  update: 'update applications\' settings',
  updateProcessing: 'The application setting is updating, please wait a moment..',
  updateConfirm: 'Are you sure to update the setting of application {name} ?',
  // updateSuccess: '',
  remove: 'Remove application',
  removeProcessing: 'The application is uninstalling, please wait a moment',
  removeConfirm: 'Remove application {name} ?',
  removeSuccess: 'Removed application {name}',
  stop: 'Stop Application',
  stopProcessing: 'The application is stopping, please wait for a moment',
  stopConfirm: 'Stop application {name} ?',
  stopSuccess: 'Stopped application {name}',
  alertSetting: 'Alert Setting',
  newRule: 'Add new rule',
  searchApp: 'Search application',
  homepage: 'Homepage',
  startDatanode: 'Start Datanode',
  sync: 'Sync',
  syncable: 'Syncable',
  syncApp: '@:applications.sync app',
  syncAppTo: '@:applications.sync app to this version',
  syncAppConfirm: 'Sure to @:applications.sync {id} to {version} ?',
  syncAppProcessing: '@:applications.syncApp {id} to {version}...',
  upgrade: 'Upgrade',
  upgradable: 'Upgradable',
  upgradeApp: '@:applications.upgrade app',
  upgradeAppTo: '@:applications.upgrade app to this version',
  upgradeAppConfirm: 'Sure to @:applications.upgradeApp {id} to {version} ?',
  upgradeAppProcessing: '@:applications.upgradeApp {id} to {version}...',
  loadBalancer: {
    name: 'Load name',
    id: 'Application @:applications.loadBalancer.name',
    kind: 'Load Type',
    appCatalog: 'System',
    createTime: 'Create Time',
    searchId: 'Search @:applications.loadBalancer.id',
    pods: 'Number of pods',
    podsSort: '@:applications.loadBalancer.pods',
    main: 'Main Load',
    useAndRequestAndLimit: '@:common.use/@:log.request/@:applications.limit',
    deleteTip: 'Confirm to delete the application payload in K8s: {name}, and stop all application pods under it at the same time?After deletion, the corresponding application instance will re-create a new application load through the control loop mechanism.',
    setPods: 'Set replica',
    setPodNumber: '@:applications.loadBalancer.setPods number',
    reviewYaml: 'View YAML',
    status: 'Status',
    cpuUsed: 'CPU usage',
    cpuLimit: 'CPU limit',
    cpuLimitUsedRate: 'CPU limit usage rate',
    cpuRequestRate: 'CPU request rate',
    cpuLimitRate: 'CPU limit rate',
    memUsed: 'Memory usage',
    memLimit: 'Memory limit',
    memLimitUsedRate: 'Memory limit usage rate',
    memRequestRate: 'Memory request rate',
    memLimitRate: 'Memory limit rate',
    diskUsed: 'Disk usage',
    diskUsedRate: 'Disk usage rate',
    bdc: 'Big Data Cluster',
    group: 'Group'
  },
  installMode: 'Scope of use',
  runningStatus: 'Status',
  parameSettings: 'Settings Parameters',
  advancedSettings: 'Advanced Settings Mode',
  installFromSettings: 'Install',
  installUploadProgress: 'Uploading, {percent}% completed',
  cpu: 'CPU(Core)',
  memory: 'Memory(GB)',
  disk: 'Disk(GB)',
  replicas: 'Replicas',
  replicasTips: 'Number of Pod replicas allowed to be created by the app',
  timeUnit: 'Time Unit',
  cpuUnit: 'CPU Unit',
  memoryUnit: 'Memory Unit',
  diskUnit: 'Disk Unit',
  core: 'core',
  appType: 'App Type',
  runtimeStatus: {
    normal: 'Normal',
    abnormal: 'Abnormal',
    notRunning: 'Not Running'
  },
  limit: 'Limit',
  useCpu: '@:common.cpu@:common.use',
  useMemory: '@:common.mem@:common.use',
  useDisk: '@:common.disk@:common.use',
  requestsCpu: '@:common.cpu@:log.request',
  requestsMemory: '@:common.mem@:log.request',
  limitsCpu: '@:common.cpu@:applications.limit',
  limitsMemory: '@:common.mem@:applications.limit',
  systemAppStatus: 'System App Status',
  containerSpecNum: 'Container Spec Num',
  containerRunningNum: 'Container Running Num',
  podStatus: 'Pod Status',
  podStatusLabel: {
    Failed: 'Failed',
    Pending: 'Pending',
    Running: '@:applications.running',
    Succeeded: 'Succeeded',
    Unknown: 'Unknown'
  },
  modeType: 'Module Type',
  appMode: 'Application module',
  settingTemplate: 'Configuration Template',
  runningApp: '@:applications.running@:applications.app',
  installedApp: '@:applications.installed@:applications.app',
  onlyAdminCanDelApp: 'You can delete an application only when you have the admin role in the security group',
  pod: 'Pod',
  podId: '@:applications.pod ID',
  fromNode: 'From Node',
  fromCatalog: 'From Catalog',
  fromApp: 'From @:applications.app',
  container: 'Container',
  containerName: '@:applications.container Name',
  containerList: '@:applications.container List',
  restartNum: 'Restart Number',
  image: 'Image',
  containerImageConfig: 'Container Image Config',
  runPod: 'Run @:applications.pod',
  runMetric: 'Run Metric',
  appConfigInfo: 'Config Info',
  appBasicInfo: 'Basic Info',
  annotations: 'Annotations',
  GlobalUnique: 'All members of the cluster',
  GroupOrUser: '@:applications.GroupUnique or user',
  GroupUnique: 'Specify security group',
  installedGroups: 'Installed Groups',
  disableUpdateRenderTips: 'The application does not have a corresponding application instance and cannot be updated',
  noInstance: 'No Instance',
  globalAppInstallTips: 'The application is already installed globally and cannot be reinstalled',
  appInstallTips: 'This application is already installed in the current Big Data cluster and cannot be re-installed.',
  noPermissionInstallTips: 'No permission to install the application',
  installProgressTips: '* There is a process being installed in the currently selected {name}, click to view the process',
  installationInProgress: 'Installation In Progress',
  refreshAppBtnTips: 'The page data has priority to read the cache content and is updated every 12 minutes or so. Click this button to immediately refresh the application list data and obtain the latest application status information',
  restartConfirm: 'Are you sure you want to restart application `{name}` ?',
  scale: 'Scale pods',
  currentScaleNum: 'Current replica scale',
  scalePodsTip: 'After setting, the number of replicas of the work load will be updated and the current load will be restarted. This operation only temporarily adjusts the number of copies of the application load. After the application load is rolled up, it will be restored to the number of copies configured in the application instance.',
  loadScaleNum: 'Number of load copies',
  desiredScaleNum: 'Desired number of replicas',
  highScaleTips: 'Maximum number of copies: 100 (large number of copies may cause cluster performance problems)',
  actionNotSupportTips: 'The current load type does not support {action}',
  podDeleteConfirm: 'Are you sure to delete the app Pod: {name} in K8s? After deletion, the corresponding work load will immediately create a new application Pod as expected.',
  uninstallConfirm: 'Confirm uninstalling {bdc} the application instance under the Big Data cluster `{name}` ? This action will remove the Application object on Kubernetes and delete the application instance runtime configuration and all historical configuration versions on KDP. This operation is irreversible. Please enter the application name in the input box to confirm the uninstallation:Confirm uninstalling {bdc} the application instance under the Big Data cluster `{name}` ? This action will remove the Application object on Kubernetes and delete the application instance runtime configuration and all historical configuration versions on KDP. This operation is irreversible. Please enter the application instance name in the input box to confirm the uninstallation:',
  installAppTips: 'Only support the operation of institution unique or personal unique applications, global unique applications please contact the administrator to operate manually',
  containerLog: 'Container Logs',
  getLatestData: 'Get Latest Data',
  renderDeleteConfirm: 'Confirm stopping the Application instance under {bdc} Big Data cluster: `{name}` ? This action will remove the Application object on Kubernetes.',
  renderStartConfirm: 'Confirm startup of {bdc} application instance under Big Data cluster: `{name}` ?',
  onlySelf: 'onlySelf',
  allMembersOfOrg: 'all Members Of {org}',
  appointGroup: 'appoint Group',
  appointGroupTip: 'Only all members under @:applications.appointGroup can use',
  appointUser: 'appoint User',
  appointUserTip: 'Only @:applications.appointUser can use',
  podName: 'Pod Name',
  runNode: 'Run Node',
  qosClass: 'Service quality',
  yamlInfo: 'YAML Info',
  statusInfo: 'Status Info',
  viewLog: 'View Log',
  renderApp: 'Application instance name',
  lastOperationTime: 'Last operation time',
  createTime: 'Last operation time',
  appLoadbalancer: 'Work Loadbalancer',
  appPod: 'Pod Instance',
  strategyType: 'Strategy Type',
  labels: 'Labels',
  labelSelector: 'Label Selector',
  nodeSelector: 'Node Selector',
  affinity: 'Affinity',
  affinityTip: 'Allows you to limit which nodes your Pod can schedule to according to the node label.',
  configurationHistory: 'Config diff',
  inputAppNameError: 'The input application instance names are inconsistent',
  noInstanceTips: 'The instantiation configuration of the application cannot be found. Please confirm the application status',
  toHomePage: 'Access Address',
  resourceStatistics: 'Resource statistics',
  searchTimeRangeValidation: 'Search time range validation',
  cpuSpecTip: 'CPU supports up to 3 decimal places',
  replicasSpecTip: 'Replicas must be an integer',
  selectGroupTip: 'Please specify a security group',
  selectUserTip: 'Please specify a user',
  scaleNumTip: 'Pod number must be an integer',
  number: 'number',
  portLimitTip: 'The container port number range needs to be between 1-65535',
  exposePorts: 'If you need to expose ports, please check load balancing',
  dockerDownloadTips: 'Docker type applications can temporarily not support downloading resource files',
  isNotInAppStoreTip: 'This application is not currently supported for installation',
  clickToNodePods: 'Click to view the Pod list in this node',
  monitoringEnableTips: 'If monitoring is required, please make sure that the port has exposed monitoring sample data and supports to get monitoring sample data by pulling through API interface',
  workloadSubTitle: 'Workloads running in a Kubernetes cluster',
  podSubTitle: 'Smallest deployable compute unit running in a Kubernetes cluster',
  systemApps: {
    executing: 'Executing',
    failed: 'Execution failed',
    exception: 'Exception',
    stopping: 'stopping',
    unknown: 'unknown',
    running: 'Running'
  },
  noSystemInstance: 'No system application instances',
  labelConfiguration: 'Label Configuration',
  installationMode: 'Install Mode',
  generalTips: 'Configure the minimum CPU as 0.1 core, the minimum memory as 128MB, and the minimum instance as 1. If the value filled by the user is less than the minimum setting, the minimum value will be used by default.',
  resetSettings: 'Fill with One-Click',
  resetSettingsSuccess: 'Filled with One-Click successfully',
  resetSettingsTexts: {
    useDefault: 'Default Settings',
    useLastSuccess: 'Last Successful Configuration',
    useLastFailed: 'Last Failed Configuration'
  },
  confirmResetSettingsTips: {
    useDefault: 'This operation will override the current settings with the default configuration. Do you want to continue?',
    useLastSuccess: 'This operation will import the last successful configuration and override the current settings. Do you want to continue?',
    useLastFailed: 'This operation will import the configuration when the last installation failed and override the current settings. If there are dependent resource files, please upload them again. Do you want to continue?'
  },
  volumesTips: 'Mounting volumes only supports read-write mode (RW); The minimum disk size is 1Mi. If the value entered is less than the minimum, the system will use the minimum value by default.',
  containerPathPlaceholder: 'Please enter an absolute path starting with /, for example: /tmp',
  logdirContainerTips: 'Monitors all files in this directory, excluding subfolders.',
  settingsNotFilled: 'You have not completed the {msg} content, click OK to ignore and install directly.',
  currentPage: 'Current Page',
  applicationUsedSettings: 'Application Used Settings',
  applicationSecret: 'Application Secret',
  global: 'System Service',
  resourcesTopology: 'Resource Topology',
  webTerminal: 'Web Terminal'
}
