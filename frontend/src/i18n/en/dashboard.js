export default {
  clusterLifetime: 'Cluster Lifetime',
  clusterLifetimeDesc: 'Current time - Cluster creation time',
  nodeNum: 'Nodes',
  nodeNumDesc: 'Number of main control nodes + Number of working nodes in the cluster',
  nodeRunningPodNum: 'The number of Pods running on a node is Top20',
  nodeRunningPodNumDesc: 'Number of Pods: The total number of Pod objects running on the current cluster node',
  podStatusStatis: 'Pod Status Statis',
  podStatusStatisDesc: 'Pods are scheduled only once in their lifetime (to a node) Starting from Pending and entering Running, depending on whether any container in Pod has Failed. End Entering Succeeded/Failed',
  namespaceNum: 'Namespaces',
  namespaceNumDesc: 'Number of groups in which resources in the same cluster are isolated from each other',
  pvcNum: 'PVC',
  pvcNumDesc: 'Number of persistent volume requests(PVC:PersistentVolumeClaim)',
  containerStatusStatis: 'Container Status Statis',
  containerStatusStatisDesc: 'Number statistics for each state of the container, refer to: https://kubernetes.io/zh/docs/concepts/workloads/pods/pod-lifecycle/#container-states',
  waiting: 'Waiting',
  running: 'Running',
  terminated: 'Terminated',
  abnormalTermination: 'Abnormal',
  cycleRestart: 'Reboot',
  workloadAndCpuStatis: 'Total CPU and overall utilization',
  workloadAndCpuStatisDesc: 'Total CPU: Total number of cpus on all nodes in cluster, Used CPU: CPU usage of all nodes in cluster, Usage Rate: Usage ÷ Total %',
  labelCPU: 'CPU Cores',
  usage: 'Usage',
  usageRate: 'Usage Rate',
  CPUUsageRate: 'CPU @:dashboard.usageRate',
  memUsageRate: 'Disk @:dashboard.usageRate',
  diskUsageRate: 'Memory @:dashboard.usageRate',
  used: 'Used',
  memoryUsageStatis: 'Total memory and overall usage',
  memoryUsageStatisDesc: 'Total Memory: Total memory capacity of all nodes in cluster, Used Memory: Memory usage of all nodes in cluster, Usage Rate: Usage ÷ Total %',
  labelMemory: 'Memory Size',
  diskUsageStatis: 'Total number of disks and overall utilization',
  diskUsageStatisDesc: 'Total Number of Disk: Total number of disks on all nodes in cluster, Used Disk: Disk usage of all nodes in cluster, Usage Rate: Usage ÷ Total %',
  labelDisk: 'Disk Size',
  requestsCPURate: 'CPU Request Rate',
  requestsCPURateDesc: 'The sum of CPU requests for running containers within the cluster ÷ the sum of CPU allocatable amounts for working nodes %',
  requestsMemoryRate: 'Memory Request Rate',
  requestsMemoryRateDesc: 'Sum of memory requests for running containers within the cluster ÷ Sum of available memory allocation for working nodes %',
  limitsCPURate: 'CPU Limit Rate',
  limitsCPURateDesc: 'Sum of CPU limits for running containers within the cluster ÷ Sum of CPU allocatable amounts for working nodes %',
  limitsMemoryRate: 'Memory Limit Rate',
  limitsMemoryRateDesc: 'Sum of memory limits for running containers within the cluster ÷ Sum of available memory allocation for working nodes %',
  podUnit: '',
  reviewNodeDetails: 'Click for node details',
  group: 'Namespace',
  containerName: 'Name',
  containerNum: 'Containers',
  image: 'Image',
  expectInstance: 'Expect',
  runningInstance: 'Running',
  waitingInstance: 'Waiting',
  terminatedInstance: 'Terminated',
  restartNum: 'Restarts',
  maxRunningTime: 'Maximum running time',
  usability: 'Usability',
  waitingReason: 'Waiting Reason',
  terminatedReason: 'Terminated Reason',
  all: 'All',
  usabilityDuration: 'Usability Duration',
  podNum: 'Pods',
  workloadNum: 'Workloads',

  cpuUsed: 'CPU Usage',
  cpuRequest: 'CPU Requests',
  cpuLimit: 'CPU Limit',
  memUsed: 'Memory Usage',
  memRequest: 'Memory Requests',
  memLimit: 'Memory Limit',
  requestsStorage: 'Storage Requests',
  cpuUsedRate: 'CPU Usage Rate',
  cpuRequestRate: 'CPU Request Rate',
  cpuLimitRate: 'CPU Limit Rate',
  memUsedRate: 'Memory Usage Rate',
  memRequestRate: 'Memory Request Rate',
  memLimitRate: 'Memory Limit Rate',
  sortBy: 'Sort by',
  sortRadioTips: 'Select sorting rules with progress bar display columns, either by value, or by percentage',
  sortByNum: 'By value',
  sortByPercent: 'By percentage',
  node: 'Node',
  condition: 'Status',
  podLimit: 'Pod Limit',
  pod: 'Pod',
  cpuTotal: 'Total CPU',
  memTotal: 'Total Memory',
  totalCPUAvailable: 'Total CPU Available',
  workloadUseCPU: 'CPU Usage',
  totalMemoryAvailable: 'Total Memory Available',
  workloadUseMemory: 'UseMemory',
  nodeCPUUsageTrend: 'Node CPU Utilization Trends',
  nodeMemoryUsageTrend: 'Node Memory Usage Trends',
  nodeNetworkUsageTrend: 'Node Network Traffic Trends',
  variableNode: '{node}',
  nodeInput: 'Inflow:{node}',
  nodeOutput: 'Outflow:{node}',
  podName: 'Pod Name',
  useCPULabel: 'CPU Usage',
  disk: 'Disk',
  reset: 'Reset',
  podUseCPURate: 'Node Container CPU Usage (max 100%)',
  podUsMemoryRate: 'Node Container Memory Usage',
  nodeDiskIO: 'Node Disk I/O',
  nodeDiskIODesc: 'Read and write volume of all disk partitions in the node in unit time',
  deviceRead: '{device} read',
  deviceWritten: '{device} written',
  deviceIOTime: '{device} io time',
  variablePod: '{pod}',
  variableWorkload: '{workload} - {workload_type}',
  variableContainer: '{container}',
  networkInflow: 'Network Inflow',
  networkOutflow: 'Network Outflow',
  // Log
  logVolumeOverview: 'Log Volume Overview - Standard Output/Standard Errors',
  logVolumeDesc: 'Logs printed to the console by each application',
  logsCount: 'Logs',
  occupiedCapacity: 'Capacity',
  logOutflowTrend: 'Log Flow - Standard Output Trend Chart',
  capacity: 'Capacity',
  number: 'Number',
  logfileTrend: 'Log Flow - Log File Trend Chart',
  logfileTrendDesc: 'Logs saved in log files for each application',
  errorFrequency: 'Error Reporting Frequency',
  errorNumber: 'Error Count',
  errorFrequencyDesc: 'Count the number of error reports within one minute at each time point in the current period',
  errorsReportedFromLogFile: 'Error Count (From LOG File)',
  errorLog: 'Error Log',
  errorLogDesc: 'Error log contents are listed (filtered by namespace, container and log generation time in the log label, and filtered by entering the "Log Viewer" page to find the error log context)',
  errorLogFromLogFile: 'Error Log (From LOG File)',
  standardOutputError: 'Standard Output/Standard Error',
  logFile: 'Log Files',
  logType: 'Log Type',
  logContenKeywords: 'Log keywords',
  Failed: 'Failed',
  Pending: 'Pending',
  Running: 'Running',
  Succeeded: 'Succeeded',
  Unknown: 'Unknown',
  diskRead: 'Disk Read',
  diskWrite: 'Disk Read',
  partitionUsage: 'Partition Usage',
  resourceUsage: 'Resource Usage',
  stderr: 'Standard error',
  stdout: 'Standard output',
  cpuRequestLimit: 'CPU @:common.requestLimit',
  memRequestLimit: 'Memory @:common.requestLimit',
  cpuUseRequestLimit: 'CPU @:common.useRequestLimit',
  memUseRequestLimit: 'Memory @:common.useRequestLimit',
  namespace: 'Namespace',

  // bdc
  bdcLifetime: 'Big Data Cluster Lifetime',
  bdcLifetimeDesc: 'Current Time - Big Data Cluster Creation Time',
  quotaUsage: 'Quota Usage Rate',
  bdcQuotaUsageDesc: 'Quota Usage Rate = Quota Usage ÷ Quota Total %  . If there is no data, please check whether the current big data cluster quota is set correctly',
  cpuUsedFromRequestsRate: 'CPU Requests Rate',
  cpuUsedFromLimitRate: 'CPU Limit Rate',
  memUsedFromRequestsRate: 'Memory Request Rate',
  memUsedFromLimitRate: 'Memory Limit Rate',
  cpuUsedFromRequestsRateDesc: 'In the current big data cluster, the sum of the CPU usage of the running containers ÷ the sum of the CPU "resource requests" declared by the running containers %',
  cpuUsedFromLimitRateDesc: 'In the current big data cluster, the sum of the CPU usage of the running containers ÷ the sum of the CPU "resource limits" declared by the running containers %',
  memUsedFromRequestsRateDesc: 'In the current big data cluster, the sum of the memory usage of the running containers ÷ the sum of the memory "resource requests" declared by the running containers %',
  memUsedFromLimitRateDesc: 'In the current big data cluster, the sum of the memory usage of the running containers ÷ the sum of the memory "resource limits" declared by the running containers %'
}
